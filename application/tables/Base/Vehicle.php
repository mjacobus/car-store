<?php

/**
 * Base_Vehicle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $model
 * @property string $color
 * @property integer $brand_id
 * @property integer $fuel_id
 * @property integer $type_id
 * @property integer $status_id
 * @property float $price
 * @property boolean $showPrice
 * @property integer $year
 * @property integer $modelYear
 * @property integer $priority
 * @property string $licensePlate
 * @property string $url
 * @property VehicleStatus $Status
 * @property VehicleType $Type
 * @property Brand $Brand
 * @property Fuel $Fuel
 * @property Doctrine_Collection $Features
 * @property Doctrine_Collection $Images
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Base_Vehicle extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('Vehicle');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('model', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('color', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('brand_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unsigned' => true,
             ));
        $this->hasColumn('fuel_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unsigned' => true,
             ));
        $this->hasColumn('type_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unsigned' => true,
             ));
        $this->hasColumn('status_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unsigned' => true,
             ));
        $this->hasColumn('price', 'float', null, array(
             'type' => 'float',
             'default' => 0,
             ));
        $this->hasColumn('showPrice', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             'notnull' => true,
             ));
        $this->hasColumn('year', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('modelYear', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             'notnull' => true,
             ));
        $this->hasColumn('licensePlate', 'string', 8, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'length' => '8',
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'length' => '255',
             ));


        $this->index('model', array(
             'fields' => 
             array(
              'model' => 
              array(
              ),
             ),
             ));
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('VehicleStatus as Status', array(
             'local' => 'status_id',
             'foreign' => 'id'));

        $this->hasOne('VehicleType as Type', array(
             'local' => 'type_id',
             'foreign' => 'id'));

        $this->hasOne('Brand', array(
             'local' => 'brand_id',
             'foreign' => 'id'));

        $this->hasOne('Fuel', array(
             'local' => 'fuel_id',
             'foreign' => 'id'));

        $this->hasMany('VehicleFeature as Features', array(
             'local' => 'id',
             'foreign' => 'vehicle_id'));

        $this->hasMany('VehicleImage as Images', array(
             'local' => 'id',
             'foreign' => 'vehicle_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}